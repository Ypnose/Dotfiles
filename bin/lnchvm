#!/bin/sh
# Script by Ypnose - http://ywstd.fr

usage() {
	printf "%s\n" "usage: ${0##*/} [-b ISO] [-f FMT] [-h] [-m RAM] [-p SSH PORT] [-w HTTP PORT] [-s HTTPS PORT] [IMG]"
	exit
}

p_err() {
	printf "%s\n" "$1" >&2
	exit 1
}

qemu_launch() {
	qemu-system-x86_64 -m "${VM_RAM:-512M}" -enable-kvm -vga std \
		-drive file="$VM_IMG",format="${VM_FMT:-qcow2}" -net nic \
		-net user,hostfwd=tcp::"${VM_SSH:-9922}"-:22,hostfwd=tcp::"${VM_WWW:-8080}"-:80,hostfwd=tcp::"${VM_SSL:-8443}"-:443 \
		"$@"
}

if [ -z "$1" ]; then
	usage
fi

while getopts ":b:f:hm:p:s:w:" opt; do
	case $opt in
		b) VM_ISO="$OPTARG" ;;
		f) VM_FMT="$OPTARG" ;;
		h) usage ;;
		m) VM_RAM="$OPTARG" ;;
		p) VM_SSH="$OPTARG" ;;
		s) VM_SSL="$OPTARG" ;;
		w) VM_WWW="$OPTARG" ;;
		*) usage ;;
	esac
done
shift $(( OPTIND - 1 ))

if [ "$#" -ne 1 ]; then
	usage
fi

VM_IMG="$1"

if [ ! -f "$VM_IMG" ]; then
	p_err "$VM_IMG not found. You need to create it with qemu-img"
fi

if ! grep -q '^kvm' /proc/modules; then
	p_err "kvm module is not loaded"
fi

if [ -n "$VM_ISO" ]; then
	if [ ! -f "$VM_ISO" ]; then
		p_err "$VM_ISO not found"
	else
		qemu_launch -cdrom "$VM_ISO" -boot order=d
	fi
else
	qemu_launch
fi

exit
