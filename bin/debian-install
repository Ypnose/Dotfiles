#!/bin/sh
# Script by Ypnose - http://ywstd.fr
# wget(1) is needed
set -e

DE_OSDISK="$1"
DE_HOSTNA="$2"
DE_HOSTNA="${DE_HOSTNA:-ypnbox}"
DE_CHROOT="syschroot"
DE_RELEAS="buster"
# Uncomment to use Ubuntu repository
#DE_REPURL="https://fr.archive.ubuntu.com/ubuntu/"
# Set PATH because the same value will be used by debootstrap. If not
# set, it may fail on distro like Archlinux
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
export PATH

##############################

# 1 = swap | 2 = / | 3 = other
if [ -z "$1" ] || [ "$1" = "-h" ]; then
	printf "%s\n" "usage: ${0##*/} [DISK] [HOSTNAME]"
	exit
fi

if [ "$(id -u)" -ne 0 ]; then
	printf "%s\n" "${0##*/} needs to be called as root" >&2
	exit 1
fi

# Verify destination filesystem is mounted
if [ ! -d "$DE_CHROOT" ]; then
	printf "%s\n" "$DE_CHROOT directory is missing" >&2
	exit 1
elif ! mount | grep -q "^/dev/${DE_OSDISK}2"; then
	printf "%s\n" "/dev/${DE_OSDISK}2 is not mounted inside $DE_CHROOT" >&2
	exit 1
fi

# https://salsa.debian.org/installer-team/debootstrap.git/
git clone https://salsa.debian.org/installer-team/debootstrap.git/
if [ ! -x "${PWD}/debootstrap/debootstrap" ]; then
	printf "%s\n" "debootstrap executable not found in ${PWD}/debootstrap" >&2
	exit 1
fi

# Launch the sauce
DEBOOTSTRAP_DIR="${PWD}/debootstrap/"
export DEBOOTSTRAP_DIR
./debootstrap/debootstrap --arch=amd64 --variant=minbase "$DE_RELEAS" "$DE_CHROOT" "$DE_REPURL"

# No cruft
cat >"${DE_CHROOT}/etc/apt/apt.conf.d/02norecommends" <<-EOF
	APT::Install-Recommends "false";
	APT::Install-Suggests "false";
EOF

# /etc/fstab
DE_OSUUID="$(lsblk -no UUID "/dev/${DE_OSDISK}2")"
cat >"${DE_CHROOT}/etc/fstab" <<-EOF
	# /etc/fstab

	#UUID=SWAP        none swap defaults 0 0
	UUID=${DE_OSUUID} / ext4 defaults,rw,errors=remount-ro 0 1
	tmpfs /tmp tmpfs nodev,nosuid 0 0
EOF

# hostname + /etc/hosts
printf "%s\n" "$DE_HOSTNA" >"${DE_CHROOT}/etc/hostname"
cat >"${DE_CHROOT}/etc/hosts" <<-EOF
	# /etc/hosts

	127.0.0.1    localhost
	127.0.1.1    $DE_HOSTNA
	# IPv6
	#::1          ip6-localhost ip6-loopback
	#fe00::0      ip6-localnet
	#ff00::0      ip6-mcastprefix
EOF

# HISTFILE
printf "\n%s\n" "unset HISTFILE" >>"${DE_CHROOT}/etc/profile"

# IPv6
mkdir -p "${DE_CHROOT}/etc/sysctl.d"
cat >"${DE_CHROOT}/etc/sysctl.d/yp.conf" <<-EOF
	# /etc/sysctl.d/yp.conf

	# Disable IPv6
	net.ipv6.conf.all.disable_ipv6 = 1
	net.ipv6.conf.default.disable_ipv6 = 1
	net.ipv6.conf.lo.disable_ipv6 = 1

	# IPv6 Privacy Extensions
	#net.ipv6.conf.all.use_tempaddr = 2
	#net.ipv6.conf.default.use_tempaddr = 2
	#net.ipv6.conf.eth0.use_tempaddr = 2
	#net.ipv6.conf.eth1.use_tempaddr = 2
	#net.ipv6.conf.wlan0.use_tempaddr = 2
EOF

##############################

# Prepare the chroot...
if [ -f "/etc/resolv.conf" ]; then
	cp "/etc/resolv.conf" "${DE_CHROOT}/etc"
fi

mount -t proc proc "${DE_CHROOT}/proc"
mount -t sysfs sys "${DE_CHROOT}/sys"
mount -o bind /dev "${DE_CHROOT}/dev"
mount -o bind /dev/pts "${DE_CHROOT}/dev/pts"

# Run commands inside the chroot
chroot "${DE_CHROOT}" /bin/sh -l <<-EOF
	LC_ALL=C
	export LC_ALL

	rm -r /var/cache/apt/archives/
	apt-get update
	apt-get install -y netbase whiptail tzdata locales
	dpkg-reconfigure tzdata
	dpkg-reconfigure locales
EOF

printf "%s\n" "###### ENTERING IN CHROOT ######"

# Go inside and do your business...
chroot "${DE_CHROOT}" /bin/sh -l

##############################

umount "${DE_CHROOT}/dev/pts" "${DE_CHROOT}/dev" "${DE_CHROOT}/sys" \
	"${DE_CHROOT}/proc"
printf "%s\n" "DONE"

exit
